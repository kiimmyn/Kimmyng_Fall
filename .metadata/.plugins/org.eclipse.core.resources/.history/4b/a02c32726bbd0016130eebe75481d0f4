//Kimmy Ng
//12/8/16
// 2


package fracCalc;

import java.util.Scanner;

public class FracCalc{

    public static void main(String[] args) 
    {
        // TODO: Read the input from the user and call produceAnswer with an equation
    	Scanner console = new Scanner(System.in);
    	System.out.println("Enter your operation.");
    	String input = console.nextLine();
 

    	produceAnswer(input);
    }
        // ** IMPORTANT ** DO NOT DELETE THIS FUNCTION.  This function will be used to test your code
        // This function takes a String 'input' and produces the result
   	    //
   	    // input is a fraction string that needs to be evaluated.  For your program, this will be the user input.
   	    //      e.g. input ==> "1/2 + 3/4"
   	    //        
    	// The function should return the result of the fraction after it has been calculated
        //      e.g. return ==> "1_1/4"
    public static String produceAnswer(String input)
  	    { 
        // TODO: Implement this function to produce the solution to the input
    	    	
   	    String [] op=parseInput(input);
   	   	int [] firstOp=parseOp(op[0]);
   		int [] secondOp=parseOp(op[2]);
 		int[] answer = new int [2];
 			if (op[1].equals("+")){
    	  	answer = addFrac(firstOp,secondOp);
            }else if(op[1].equals("-")){
  	       	answer = subtractFrac(firstOp,secondOp);
            }else if(op[1].equals("*")){
          	answer = multiplyFrac(firstOp,secondOp);
    	        }else{
    	        	if(op[1].equals("/")){
    	        }
    	        	answer = divideFrac(firstOp,secondOp);
    	        }
    	        return(toMixedNum(answer));
    	    }

    	  // TODO: Fill in the space below with any helper methods that you think you will need
    	    
    	    public static String[] parseInput(String input) {
    	    	String[] answer=input.split(" "); 
    			return answer; }
    	    
    	    public static int[] parseOp(String op){
    	    	int[] answer = new int[3];
    	    	int opLength = op.length();
    	    	if (op.indexOf("_")==-1 && op.indexOf("/")==-1) { // if the value is a whole number
    	    		answer[0] = Integer.parseInt(op);
    	    		answer[1] = 0;
    	    	    answer[2] = 1;
    	    	} else if (op.indexOf("_")==-1) { // if the value is a fraction
    	    		answer[0] = 0;
    	    		answer[1] = Integer.parseInt(op.substring(0, op.indexOf("/")));
    	    		answer[2] = Integer.parseInt(op.substring(op.indexOf("/") + 1, opLength));
    	    	} else { // if the value is a mixed number
    	    		answer[0] = Integer.parseInt(op.substring(0,op.indexOf("_")));
    	    		answer[1] = Integer.parseInt(op.substring(op.indexOf("_")+1,op.indexOf("/")));
    	    		answer[2] = Integer.parseInt(op.substring(op.indexOf("/")+1));
    	    
    	    	}
    	    	int[] impropFrac = toImpropFrac(answer[0], answer[1], answer[2]);
    	    	return impropFrac; }
    	    
    	    //converts mixed number into an improper fraction
    	    public static int[] toImpropFrac (int integer, int num, int den){
    	    	int[] toImpropFrac = new int[2];
    	    	toImpropFrac[0] = integer * den + num;
    	    	toImpropFrac[1] = den;
    	    	return toImpropFrac; }

    	    public static int[] addFrac(int[] firstOp, int[] secondOp){
    	    	int[] answer = new int[2];
    	    	if(firstOp[1] == secondOp[1]){
    	    		answer[0] = firstOp[0] + secondOp[0];
    	    		answer[1] = firstOp[1];
    	    	}else{
    	    firstOp[0] = firstOp[0] * secondOp[1];
    	    secondOp[0] = secondOp[0] * firstOp[1];
			answer[0] = firstOp[0] + secondOp[0];
			answer[1] = firstOp[1] * secondOp[1];
    	   	}
    	    	return answer; }

    	    public static int[] subtractFrac(int[] firstOp, int[] secondOp){
    	   	secondOp[0]=secondOp[0]*-1;
    	    return addFrac(firstOp, secondOp); }

    	    public static int[] multiplyFrac(int[] firstOp, int[] secondOp){
    	
    	    int[] answer = new int[2];
    	    answer[0]= firstOp[0]*secondOp[0];
    	    answer[1] = firstOp[1]*secondOp[1];
    	    return answer; }

    	    public static int[] divideFrac(int[] firstOp, int[] secondOp){
    	   	int[] answer = new int[2];
    	    answer[0]=secondOp[1];
    	    answer[1]=secondOp[0];
    	    return multiplyFrac(firstOp, answer); }

        public static String toMixedNum(int[] frac){
    	    
    	    int integer = frac[0] / frac[1];
    	    int num = frac[0] % frac[1];
    	    int den = frac[1];
    	    if(num < 0){
    	    	num *= -1;}	
    	if(den < 0){
		den *= -1;
	}
    	return (integer + "_" + num + "/" + den);
}

}